hydra:
  run:
    dir: outputs/${hydra.job.override_dirname}
  sweep:
    dir: multirun/${hydra.job.override_dirname}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    disable_existing_loggers: false
    formatters:
      rich_fmt:
        format: '%(message)s'
    handlers:
      console_rich:
        class: rich.logging.RichHandler
        level: WARNING
        formatter: rich_fmt
        rich_tracebacks: true
        tracebacks_show_locals: false
        markup: true
        show_time: false
        show_path: false
        enable_link_path: false
    root:
      level: WARNING
      handlers:
      - console_rich
    loggers:
      hydra:
        level: WARNING
        handlers:
        - console_rich
        propagate: false
      omegaconf:
        level: WARNING
        handlers:
        - console_rich
        propagate: false
  job_logging:
    version: 1
    disable_existing_loggers: false
    formatters:
      file_fmt:
        format: '%(asctime)s.%(msecs)03d %(levelname)s [%(name)s] %(message)s'
        datefmt: '%Y-%m-%d %H:%M:%S'
      rich_fmt:
        format: '%(message)s'
    handlers:
      console_rich:
        class: rich.logging.RichHandler
        level: WARNING
        formatter: rich_fmt
        rich_tracebacks: true
        tracebacks_show_locals: false
        markup: true
        show_time: false
        show_path: false
        enable_link_path: false
      file_all:
        class: logging.handlers.RotatingFileHandler
        level: DEBUG
        formatter: file_fmt
        filename: app.log
        maxBytes: 10485760
        backupCount: 5
      file_err:
        class: logging.handlers.RotatingFileHandler
        level: ERROR
        formatter: file_fmt
        filename: error.log
        maxBytes: 10485760
        backupCount: 5
    root:
      level: DEBUG
      handlers:
      - console_rich
      - file_all
      - file_err
    loggers:
      urllib3:
        level: WARNING
        handlers: []
        propagate: true
      httpx:
        level: WARNING
        handlers: []
        propagate: true
      requests:
        level: WARNING
        handlers: []
        propagate: true
      aiohttp:
        level: WARNING
        handlers: []
        propagate: true
      websockets:
        level: WARNING
        handlers: []
        propagate: true
      grpc:
        level: ERROR
        handlers: []
        propagate: true
      asyncio:
        level: WARNING
        handlers: []
        propagate: true
      zmq:
        level: ERROR
        handlers: []
        propagate: true
      PIL:
        level: WARNING
        handlers: []
        propagate: true
      numexpr:
        level: WARNING
        handlers: []
        propagate: true
      tqdm:
        level: ERROR
        handlers: []
        propagate: true
  env: {}
  mode: RUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.mode=RUN
    task:
    - command=list
    - resource=filesystems
  job:
    name: __main__
    chdir: true
    override_dirname: command=list,resource=filesystems
    id: ???
    num: ???
    config_name: config
    env_set:
      PYTHONHASHSEED: '0'
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.3'
    cwd: /Users/tscholak/Projects/devbox
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /Users/tscholak/Projects/devbox/src/devbox/conf
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: /Users/tscholak/Projects/devbox/outputs/command=list,resource=filesystems
    choices:
      ssh: default
      wait: default
      cloud_init: default
      api: default
      command: list
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: rich
      hydra/hydra_logging: rich
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
